<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ChatAplicationFaseto.Styles">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Styles/ColorDictionary.xaml"/>
        <ResourceDictionary Source="/Styles/FontsDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--Icon left in Header-->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="borderTemp"  Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                          >
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Icon left in Header-->
    <Style x:Key="SystemIconButtons" TargetType="{x:Type Button}" BasedOn="{StaticResource Hoverless}" >
        
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="8"/>
        
    </Style>

    <!--Mini maxi close buttons-->
    <Style x:Key="WindowControlBottons" BasedOn="{StaticResource DefaultStyle}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}"/>
        <Setter Property="LayoutTransform" >
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="{TemplateBinding Content}"/>
                        
                    </Border>


                </ControlTemplate>
            </Setter.Value>
            
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource GrayColorBrush}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="CloseButtonStyle" BasedOn="{StaticResource WindowControlBottons}" TargetType="{x:Type Button}">
       
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource CloseButtonBackGroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource BackgroundVeryLightBrush}"/>
            </Trigger>
        </Style.Triggers>

    </Style>


    <Style x:Key="DefalutButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultStyle}">

        <Setter Property="Background" Value="{StaticResource TitleOrangeBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="Padding" Value="40 5 40 5"/>
        <Setter Property="Margin" Value="20"/>

        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="0" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="10" 
                            SnapsToDevicePixels="True">
                        <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}" 
                                   Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   FontFamily="{StaticResource LatoBlack}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource TitleBlue}" Duration="0:0:0.2" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>
                                        
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                            
                            
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource TitleOrange}" Duration="0:0:0.2" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>


                        </EventTrigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#171717"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        
    </Style>


    <Style x:Key="DefalutButtonLink" TargetType="{x:Type Button}" BasedOn="{StaticResource DefalutButton}">

        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="Padding" Value="50 5 50 5"/>

        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="0" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="10" 
                            SnapsToDevicePixels="True">
                        <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Content}" 
                                   Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   FontFamily="{StaticResource LatoBlack}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource TitleOrange}" Duration="0:0:0.2" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Foreground.Color"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>


                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource Titlewhite}" Duration="0:0:0.5" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Foreground.Color"/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>


                        </EventTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#999999"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                            <Setter Property="Foreground" Value="#FF838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>


</ResourceDictionary>